import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as p}from"./app-063765ff.js";const t={},e=p(`<h1 id="_30-java虚拟机的监控及诊断工具-命令行篇" tabindex="-1"><a class="header-anchor" href="#_30-java虚拟机的监控及诊断工具-命令行篇" aria-hidden="true">#</a> 30 | Java虚拟机的监控及诊断工具（命令行篇）</h1><p>今天，我们来一起了解一下 JDK 中用于监控及诊断工具。本篇中我将使用刚刚发布的 Java 11 版本的工具进行示范。</p><p><strong>jps</strong></p><p>你可能用过ps命令，打印所有正在运行的进程的相关信息。JDK 中的jps命令（帮助文档）沿用了同样的概念：它将打印所有正在运行的 Java 进程的相关信息。</p><p>在默认情况下，jps的输出信息包括 Java 进程的进程 ID 以及主类名。我们还可以通过追加参数，来打印额外的信息。例如，-l将打印模块名以及包名；-v将打印传递给 Java 虚拟机的参数（如-XX:+UnlockExperimentalVMOptions -XX:+UseZGC）；-m将打印传递给主类的参数。</p><p>具体的示例如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>$ jps <span class="token operator">-</span>mlv
<span class="token number">18331</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>example<span class="token punctuation">.</span></span>Foo</span> <span class="token class-name">Hello</span> <span class="token class-name">World</span>
<span class="token number">18332</span> jdk<span class="token punctuation">.</span>jcmd<span class="token operator">/</span><span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>jps<span class="token punctuation">.</span></span>Jps</span> <span class="token operator">-</span>mlv <span class="token operator">-</span><span class="token class-name">Dapplication</span><span class="token punctuation">.</span>home<span class="token operator">=</span><span class="token operator">/</span><span class="token class-name">Library</span><span class="token operator">/</span><span class="token class-name">Java</span><span class="token operator">/</span><span class="token class-name">JavaVirtualMachines</span><span class="token operator">/</span>jdk<span class="token operator">-</span><span class="token number">11.</span>jdk<span class="token operator">/</span><span class="token class-name">Contents</span><span class="token operator">/</span><span class="token class-name">Home</span> <span class="token operator">-</span><span class="token class-name">Xms8m</span> <span class="token operator">-</span><span class="token class-name">Djdk</span><span class="token punctuation">.</span><span class="token keyword">module</span><span class="token punctuation">.</span>main<span class="token operator">=</span>jdk<span class="token punctuation">.</span>jcmd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，如果某 Java 进程关闭了默认开启的UsePerfData参数（即使用参数-XX:-UsePerfData），那么jps命令（以及下面介绍的jstat）将无法探知该 Java 进程。</p><p>当获得 Java 进程的进程 ID 之后，我们便可以调用接下来介绍的各项监控及诊断工具了。</p><p><strong>jstat</strong></p><p>jstat命令（帮助文档）可用来打印目标 Java 进程的性能数据。它包括多条子命令，如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>$ jstat <span class="token operator">-</span>options
<span class="token operator">-</span><span class="token keyword">class</span>
<span class="token operator">-</span>compiler
<span class="token operator">-</span>gc
<span class="token operator">-</span>gccapacity
<span class="token operator">-</span>gccause
<span class="token operator">-</span>gcmetacapacity
<span class="token operator">-</span>gcnew
<span class="token operator">-</span>gcnewcapacity
<span class="token operator">-</span>gcold
<span class="token operator">-</span>gcoldcapacity
<span class="token operator">-</span>gcutil
<span class="token operator">-</span>printcompilation
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这些子命令中，-class将打印类加载相关的数据，-compiler和-printcompilation将打印即时编译相关的数据。剩下的都是以-gc为前缀的子命令，它们将打印垃圾回收相关的数据。</p><p>默认情况下，jstat只会打印一次性能数据。我们可以将它配置为每隔一段时间打印一次，直至目标 Java 进程终止，或者达到我们所配置的最大打印次数。具体示例如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code># <span class="token class-name">Usage</span><span class="token operator">:</span> jstat <span class="token operator">-</span>outputOptions <span class="token punctuation">[</span><span class="token operator">-</span>t<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>hlines<span class="token punctuation">]</span> <span class="token constant">VMID</span> <span class="token punctuation">[</span>interval <span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">]</span>
$ jstat <span class="token operator">-</span>gc <span class="token number">22126</span> <span class="token number">1</span>s <span class="token number">4</span>
<span class="token constant">S0C</span>    <span class="token constant">S1C</span>    <span class="token constant">S0U</span>    <span class="token constant">S1U</span>      <span class="token constant">EC</span>       <span class="token constant">EU</span>        <span class="token constant">OC</span>         <span class="token constant">OU</span>       <span class="token constant">MC</span>     <span class="token constant">MU</span>    <span class="token constant">CCSC</span>   <span class="token constant">CCSU</span>   <span class="token constant">YGC</span>     <span class="token constant">YGCT</span>    <span class="token constant">FGC</span>    <span class="token constant">FGCT</span>    <span class="token constant">CGC</span>    <span class="token constant">CGCT</span>     <span class="token class-name">GCT</span>   
<span class="token number">17472</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">17472</span><span class="token punctuation">,</span><span class="token number">0</span>  <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">139904</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">47146</span><span class="token punctuation">,</span><span class="token number">4</span>   <span class="token number">349568</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">21321</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">30020</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">28001</span><span class="token punctuation">,</span><span class="token number">8</span> <span class="token number">4864</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">4673</span><span class="token punctuation">,</span><span class="token number">4</span>     <span class="token number">22</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">080</span>   <span class="token number">3</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">270</span>   <span class="token number">0</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">000</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">350</span>
<span class="token number">17472</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">17472</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">420</span><span class="token punctuation">,</span><span class="token number">6</span>   <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">139904</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">11178</span><span class="token punctuation">,</span><span class="token number">4</span>   <span class="token number">349568</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">21321</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">30020</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">28090</span><span class="token punctuation">,</span><span class="token number">1</span> <span class="token number">4864</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">4674</span><span class="token punctuation">,</span><span class="token number">2</span>     <span class="token number">28</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">084</span>   <span class="token number">3</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">270</span>   <span class="token number">0</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">000</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">354</span>
<span class="token number">17472</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">17472</span><span class="token punctuation">,</span><span class="token number">0</span>  <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">403</span><span class="token punctuation">,</span><span class="token number">9</span>  <span class="token number">139904</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">139538</span><span class="token punctuation">,</span><span class="token number">4</span>  <span class="token number">349568</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">21323</span><span class="token punctuation">,</span><span class="token number">4</span>   <span class="token number">30020</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">28137</span><span class="token punctuation">,</span><span class="token number">2</span> <span class="token number">4864</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">4674</span><span class="token punctuation">,</span><span class="token number">2</span>     <span class="token number">34</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">088</span>   <span class="token number">4</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">359</span>   <span class="token number">0</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">000</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">446</span>
<span class="token number">17472</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">17472</span><span class="token punctuation">,</span><span class="token number">0</span>  <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">139904</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>     <span class="token number">349568</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">21326</span><span class="token punctuation">,</span><span class="token number">1</span>   <span class="token number">30020</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">28093</span><span class="token punctuation">,</span><span class="token number">6</span> <span class="token number">4864</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">4673</span><span class="token punctuation">,</span><span class="token number">4</span>     <span class="token number">38</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">091</span>   <span class="token number">5</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">445</span>   <span class="token number">0</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">000</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">536</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当监控本地环境的 Java 进程时，VMID 可以简单理解为 PID。如果需要监控远程环境的 Java 进程，你可以参考 jstat 的帮助文档。</p><p>在上面这个示例中，22126 进程是一个使用了 CMS 垃圾回收器的 Java 进程。我们利用jstat的-gc子命令，来打印该进程垃圾回收相关的数据。命令最后的1s 4表示每隔 1 秒打印一次，共打印 4 次。</p><p>在-gc子命令的输出中，前四列分别为两个 Survivor 区的容量（Capacity）和已使用量（Utility）。我们可以看到，这两个 Survivor 区的容量相等，而且始终有一个 Survivor 区的内存使用量为 0。</p><p>当使用默认的 G1 GC 时，输出结果则有另一些特征：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>$ jstat <span class="token operator">-</span>gc <span class="token number">22208</span> <span class="token number">1</span>s
<span class="token constant">S0C</span>    <span class="token constant">S1C</span>    <span class="token constant">S0U</span>    <span class="token constant">S1U</span>      <span class="token constant">EC</span>       <span class="token constant">EU</span>        <span class="token constant">OC</span>         <span class="token constant">OU</span>       <span class="token constant">MC</span>     <span class="token constant">MU</span>    <span class="token constant">CCSC</span>   <span class="token constant">CCSU</span>   <span class="token constant">YGC</span>     <span class="token constant">YGCT</span>    <span class="token constant">FGC</span>    <span class="token constant">FGCT</span>    <span class="token constant">CGC</span>    <span class="token constant">CGCT</span>     <span class="token class-name">GCT</span>   
<span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">16384</span><span class="token punctuation">,</span><span class="token number">0</span>  <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">16384</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">210944</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">192512</span><span class="token punctuation">,</span><span class="token number">0</span>  <span class="token number">133120</span><span class="token punctuation">,</span><span class="token number">0</span>    <span class="token number">5332</span><span class="token punctuation">,</span><span class="token number">5</span>   <span class="token number">28848</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">26886</span><span class="token punctuation">,</span><span class="token number">4</span> <span class="token number">4864</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">4620</span><span class="token punctuation">,</span><span class="token number">5</span>     <span class="token number">19</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">067</span>   <span class="token number">1</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">016</span>   <span class="token number">2</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">002</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">084</span>
<span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">16384</span><span class="token punctuation">,</span><span class="token number">0</span>  <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">16384</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">210944</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">83968</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">133120</span><span class="token punctuation">,</span><span class="token number">0</span>    <span class="token number">5749</span><span class="token punctuation">,</span><span class="token number">9</span>   <span class="token number">29104</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">27132</span><span class="token punctuation">,</span><span class="token number">8</span> <span class="token number">4864</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">4621</span><span class="token punctuation">,</span><span class="token number">0</span>     <span class="token number">21</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">078</span>   <span class="token number">1</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">016</span>   <span class="token number">2</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">002</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">095</span>
<span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">71680</span><span class="token punctuation">,</span><span class="token number">0</span>  <span class="token number">18432</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">45056</span><span class="token punctuation">,</span><span class="token number">0</span>    <span class="token number">20285</span><span class="token punctuation">,</span><span class="token number">1</span>   <span class="token number">29872</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">27952</span><span class="token punctuation">,</span><span class="token number">4</span> <span class="token number">4864</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">4671</span><span class="token punctuation">,</span><span class="token number">6</span>     <span class="token number">23</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">089</span>   <span class="token number">2</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">063</span>   <span class="token number">2</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">002</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">153</span>
<span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">2048</span><span class="token punctuation">,</span><span class="token number">0</span>  <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">2048</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">69632</span><span class="token punctuation">,</span><span class="token number">0</span>  <span class="token number">28672</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">45056</span><span class="token punctuation">,</span><span class="token number">0</span>    <span class="token number">18608</span><span class="token punctuation">,</span><span class="token number">1</span>   <span class="token number">30128</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">28030</span><span class="token punctuation">,</span><span class="token number">4</span> <span class="token number">4864</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">4672</span><span class="token punctuation">,</span><span class="token number">4</span>     <span class="token number">32</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">093</span>   <span class="token number">2</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">063</span>   <span class="token number">2</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">002</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">158</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面这个示例中，jstat每隔 1s 便会打印垃圾回收的信息，并且不断重复下去。</p><p>你可能已经留意到，S0C和S0U始终为 0，而且另一个 Survivor 区的容量（S1C）可能会下降至 0。</p><p>这是因为，当使用 G1 GC 时，Java 虚拟机不再设置 Eden 区、Survivor 区，老年代区的内存边界，而是将堆划分为若干个等长内存区域。</p><p>每个内存区域都可以作为 Eden 区、Survivor 区以及老年代区中的任一种，并且可以在不同区域类型之间来回切换。（参考链接）</p><p>换句话说，逻辑上我们只有一个 Survivor 区。当需要迁移 Survivor 区中的数据时（即 Copying GC），我们只需另外申请一个或多个内存区域，作为新的 Survivor 区。</p><p>因此，Java 虚拟机决定在使用 G1 GC 时，将所有 Survivor 内存区域的总容量以及已使用量存放至 S1C 和 S1U 中，而 S0C 和 S0U 则被设置为 0。</p><p>当发生垃圾回收时，Java 虚拟机可能出现 Survivor 内存区域内的对象<strong>全</strong>被回收或晋升的现象。</p><p>在这种情况下，Java 虚拟机会将这块内存区域回收，并标记为可分配的状态。这样子做的结果是，堆中可能完全没有 Survivor 内存区域，因而相应的 S1C 和 S1U 将会是 0。</p><p>jstat还有一个非常有用的参数-t，它将在每行数据之前打印目标 Java 进程的启动时间。例如，在下面这个示例中，第一列代表该 Java 进程已经启动了 10.7 秒。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>$ jstat <span class="token operator">-</span>gc <span class="token operator">-</span>t <span class="token number">22407</span>
<span class="token class-name">Timestamp</span>        <span class="token constant">S0C</span>    <span class="token constant">S1C</span>    <span class="token constant">S0U</span>    <span class="token constant">S1U</span>      <span class="token constant">EC</span>       <span class="token constant">EU</span>        <span class="token constant">OC</span>         <span class="token constant">OU</span>       <span class="token constant">MC</span>     <span class="token constant">MU</span>    <span class="token constant">CCSC</span>   <span class="token constant">CCSU</span>   <span class="token constant">YGC</span>     <span class="token constant">YGCT</span>    <span class="token constant">FGC</span>    <span class="token constant">FGCT</span>    <span class="token constant">CGC</span>    <span class="token constant">CGCT</span>     <span class="token class-name">GCT</span>   
           <span class="token number">10</span><span class="token punctuation">,</span><span class="token number">7</span>  <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">55296</span><span class="token punctuation">,</span><span class="token number">0</span>  <span class="token number">45056</span><span class="token punctuation">,</span><span class="token number">0</span>   <span class="token number">34816</span><span class="token punctuation">,</span><span class="token number">0</span>    <span class="token number">20267</span><span class="token punctuation">,</span><span class="token number">8</span>   <span class="token number">30128</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">27975</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token number">4864</span><span class="token punctuation">,</span><span class="token number">0</span> <span class="token number">4671</span><span class="token punctuation">,</span><span class="token number">6</span>     <span class="token number">33</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">086</span>   <span class="token number">3</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">111</span>   <span class="token number">2</span>      <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">001</span>    <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">198</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以比较 Java 进程的启动时间以及总 GC 时间（GCT 列），或者两次测量的间隔时间以及总 GC 时间的增量，来得出 GC 时间占运行时间的比例。</p><p>如果该比例超过 20%，则说明目前堆的压力较大；如果该比例超过 90%，则说明堆里几乎没有可用空间，随时都可能抛出 OOM 异常。</p><p>jstat还可以用来判断是否出现内存泄漏。在长时间运行的 Java 程序中，我们可以运行jstat命令连续获取多行性能数据，并取这几行数据中 OU 列（即已占用的老年代内存）的最小值。</p><p>然后，我们每隔一段较长的时间重复一次上述操作，来获得多组 OU 最小值。如果这些值呈上涨趋势，则说明该 Java 程序的老年代内存已使用量在不断上涨，这意味着无法回收的对象在不断增加，因此很有可能存在内存泄漏。</p><p>上面没有涉及的列（或者其他子命令的输出），你可以查阅帮助文档了解具体含义。至于文档中漏掉的 CGC 和 CGCT，它们分别代表并发 GC Stop-The-World 的次数和时间。</p><p><strong>jmap</strong></p><p>在这种情况下，我们便可以请jmap命令（帮助文档）出马，分析 Java 虚拟机堆中的对象。</p><p>jmap同样包括多条子命令。</p><ol><li></li></ol><p>-clstats，该子命令将打印被加载类的信息。</p><ol start="2"><li></li></ol><p>-finalizerinfo，该子命令将打印所有待 finalize 的对象。</p><ol start="3"><li></li></ol><p>-histo，该子命令将统计各个类的实例数目以及占用内存，并按照内存使用量从多至少的顺序排列。此外，-histo:live只统计堆中的存活对象。</p><ol start="4"><li></li></ol><p>-dump，该子命令将导出 Java 虚拟机堆的快照。同样，-dump:live只保存堆中的存活对象。</p><p>我们通常会利用jmap -dump:live,format=b,file=filename.bin命令，将堆中所有存活对象导出至一个文件之中。</p><p>这里format=b将使jmap导出与hprof（在 Java 9 中已被移除）、-XX:+HeapDumpAfterFullGC、-XX:+HeapDumpOnOutOfMemoryError格式一致的文件。这种格式的文件可以被其他 GUI 工具查看，具体我会在下一篇中进行演示。</p><p>下面我贴了一段-histo子命令的输出：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>$ jmap <span class="token operator">-</span>histo <span class="token number">22574</span>
 num     #instances         #bytes  <span class="token keyword">class</span> name <span class="token punctuation">(</span><span class="token keyword">module</span><span class="token punctuation">)</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>
   <span class="token number">1</span><span class="token operator">:</span>        <span class="token number">500004</span>       <span class="token number">20000160</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>python<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>PyComplex</span>
   <span class="token number">2</span><span class="token operator">:</span>        <span class="token number">570866</span>       <span class="token number">18267712</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>python<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>PyFloat</span>
   <span class="token number">3</span><span class="token operator">:</span>        <span class="token number">360295</span>       <span class="token number">18027024</span>  <span class="token punctuation">[</span><span class="token class-name">B</span> <span class="token punctuation">(</span>java<span class="token punctuation">.</span>base<span class="token annotation punctuation">@11</span><span class="token punctuation">)</span>
   <span class="token number">4</span><span class="token operator">:</span>        <span class="token number">339394</span>       <span class="token number">11429680</span>  <span class="token punctuation">[</span><span class="token class-name">Lorg</span><span class="token punctuation">.</span>python<span class="token punctuation">.</span>core<span class="token punctuation">.</span>PyObject<span class="token punctuation">;</span>
   <span class="token number">5</span><span class="token operator">:</span>        <span class="token number">308637</span>       <span class="token number">11194264</span>  <span class="token punctuation">[</span><span class="token class-name">Ljava</span><span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Object<span class="token punctuation">;</span> <span class="token punctuation">(</span>java<span class="token punctuation">.</span>base<span class="token annotation punctuation">@11</span><span class="token punctuation">)</span>
   <span class="token number">6</span><span class="token operator">:</span>        <span class="token number">301378</span>        <span class="token number">9291664</span>  <span class="token punctuation">[</span><span class="token class-name">I</span> <span class="token punctuation">(</span>java<span class="token punctuation">.</span>base<span class="token annotation punctuation">@11</span><span class="token punctuation">)</span>
   <span class="token number">7</span><span class="token operator">:</span>        <span class="token number">225103</span>        <span class="token number">9004120</span>  <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span>BigInteger</span> <span class="token punctuation">(</span>java<span class="token punctuation">.</span>base<span class="token annotation punctuation">@11</span><span class="token punctuation">)</span>
   <span class="token number">8</span><span class="token operator">:</span>        <span class="token number">507362</span>        <span class="token number">8117792</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>python<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>PySequence</span>$<span class="token number">1</span>
   <span class="token number">9</span><span class="token operator">:</span>        <span class="token number">285009</span>        <span class="token number">6840216</span>  <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>python<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span>PyLong</span>
  <span class="token number">10</span><span class="token operator">:</span>        <span class="token number">282908</span>        <span class="token number">6789792</span>  <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span> <span class="token punctuation">(</span>java<span class="token punctuation">.</span>base<span class="token annotation punctuation">@11</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token number">2281</span><span class="token operator">:</span>             <span class="token number">1</span>             <span class="token number">16</span>  traceback$py
<span class="token number">2282</span><span class="token operator">:</span>             <span class="token number">1</span>             <span class="token number">16</span>  unicodedata$py
<span class="token class-name">Total</span>       <span class="token number">5151277</span>      <span class="token number">167944400</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于jmap将访问堆中的所有对象，为了保证在此过程中不被应用线程干扰，jmap需要借助安全点机制，让所有线程停留在不改变堆中数据的状态。</p><p>也就是说，由jmap导出的堆快照必定是安全点位置的。这可能导致基于该堆快照的分析结果存在偏差。举个例子，假设在编译生成的机器码中，某些对象的生命周期在两个安全点之间，那么:live选项将无法探知到这些对象。</p><p>另外，如果某个线程长时间无法跑到安全点，jmap将一直等下去。上一小节的jstat则不同。这是因为垃圾回收器会主动将jstat所需要的摘要数据保存至固定位置之中，而jstat只需直接读取即可。</p><p>关于这种长时间等待的情况，你可以通过下面这段程序来复现：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 暂停时间较长，约为二三十秒，可酌情调整。</span>
<span class="token comment">// CTRL+C的SIGINT信号无法停止，需要SIGKILL。</span>
<span class="token keyword">static</span> <span class="token keyword">double</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">0x77777777</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// counted loop</span>
    sum <span class="token operator">+=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Math.log is an intrinsic</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>jmap（以及接下来的jinfo、jstack和jcmd）依赖于 Java 虚拟机的Attach API，因此只能监控本地 Java 进程。</p><p>一旦开启 Java 虚拟机参数DisableAttachMechanism（即使用参数-XX:+DisableAttachMechanism），基于 Attach API 的命令将无法执行。反过来说，如果你不想被其他进程监控，那么你需要开启该参数。</p><p><strong>jinfo</strong></p><p>jinfo命令（帮助文档）可用来查看目标 Java 进程的参数，如传递给 Java 虚拟机的-X（即输出中的 jvm_args）、-XX参数（即输出中的 VM Flags），以及可在 Java 层面通过System.getProperty获取的-D参数（即输出中的 System Properties）。</p><p>具体的示例如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>$ jinfo <span class="token number">31185</span>
<span class="token class-name">Java</span> <span class="token class-name">System</span> <span class="token class-name">Properties</span><span class="token operator">:</span>

gopherProxySet<span class="token operator">=</span><span class="token boolean">false</span>
awt<span class="token punctuation">.</span>toolkit<span class="token operator">=</span><span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>lwawt<span class="token punctuation">.</span>macosx<span class="token punctuation">.</span></span>LWCToolkit</span>
java<span class="token punctuation">.</span>specification<span class="token punctuation">.</span>version<span class="token operator">=</span><span class="token number">11</span>
sun<span class="token punctuation">.</span>cpu<span class="token punctuation">.</span>isalist<span class="token operator">=</span>
sun<span class="token punctuation">.</span>jnu<span class="token punctuation">.</span>encoding<span class="token operator">=</span><span class="token constant">UTF</span><span class="token operator">-</span><span class="token number">8</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token constant">VM</span> <span class="token class-name">Flags</span><span class="token operator">:</span>
<span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token class-name">CICompilerCount</span><span class="token operator">=</span><span class="token number">4</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token class-name">ConcGCThreads</span><span class="token operator">=</span><span class="token number">3</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token class-name">G1ConcRefinementThreads</span><span class="token operator">=</span><span class="token number">10</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token class-name">G1HeapRegionSize</span><span class="token operator">=</span><span class="token number">2097152</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token class-name">GCDrainStackTargetSize</span><span class="token operator">=</span><span class="token number">64</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token class-name">InitialHeapSize</span><span class="token operator">=</span><span class="token number">536870912</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token class-name">MarkStackSize</span><span class="token operator">=</span><span class="token number">4194304</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token class-name">MaxHeapSize</span><span class="token operator">=</span><span class="token number">8589934592</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token class-name">MaxNewSize</span><span class="token operator">=</span><span class="token number">5152702464</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token class-name">MinHeapDeltaBytes</span><span class="token operator">=</span><span class="token number">2097152</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token class-name">NonNMethodCodeHeapSize</span><span class="token operator">=</span><span class="token number">5835340</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token class-name">NonProfiledCodeHeapSize</span><span class="token operator">=</span><span class="token number">122911450</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token class-name">ProfiledCodeHeapSize</span><span class="token operator">=</span><span class="token number">122911450</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token class-name">ReservedCodeCacheSize</span><span class="token operator">=</span><span class="token number">251658240</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span><span class="token class-name">SegmentedCodeCache</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span><span class="token class-name">UseCompressedClassPointers</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span><span class="token class-name">UseCompressedOops</span> <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span><span class="token class-name">UseG1GC</span>

<span class="token constant">VM</span> <span class="token class-name">Arguments</span><span class="token operator">:</span>
jvm_args<span class="token operator">:</span> <span class="token operator">-</span><span class="token class-name">Xlog</span><span class="token operator">:</span>gc <span class="token operator">-</span><span class="token class-name">Xmx1024m</span>
java_command<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>example<span class="token punctuation">.</span></span>Foo</span>
java_class_path <span class="token punctuation">(</span>initial<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">.</span>
<span class="token class-name">Launcher</span> <span class="token class-name">Type</span><span class="token operator">:</span> <span class="token constant">SUN_STANDARD</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>jinfo还可以用来修改目标 Java 进程的“manageable”虚拟机参数。</p><p>举个例子，我们可以使用<code>jinfo -flag +HeapDumpAfterFullGC &lt;PID&gt;</code>命令，开启<code>&lt;PID&gt;</code>所指定的 Java 进程的HeapDumpAfterFullGC参数。</p><p>你可以通过下述命令查看其他 &quot;manageable&quot; 虚拟机参数：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>$ java <span class="token operator">-</span><span class="token constant">XX</span><span class="token operator">:</span><span class="token operator">+</span><span class="token class-name">PrintFlagsFinal</span> <span class="token operator">-</span>version <span class="token operator">|</span> grep manageable   
     intx <span class="token class-name">CMSAbortablePrecleanWaitMillis</span>           <span class="token operator">=</span> <span class="token number">100</span>                                    <span class="token punctuation">{</span>manageable<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token keyword">default</span><span class="token punctuation">}</span>
     intx <span class="token class-name">CMSTriggerInterval</span>                       <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>                                     <span class="token punctuation">{</span>manageable<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token keyword">default</span><span class="token punctuation">}</span>
     intx <span class="token class-name">CMSWaitDuration</span>                          <span class="token operator">=</span> <span class="token number">2000</span>                                   <span class="token punctuation">{</span>manageable<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token keyword">default</span><span class="token punctuation">}</span>
     bool <span class="token class-name">HeapDumpAfterFullGC</span>                      <span class="token operator">=</span> <span class="token boolean">false</span>                                  <span class="token punctuation">{</span>manageable<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token keyword">default</span><span class="token punctuation">}</span>
     bool <span class="token class-name">HeapDumpBeforeFullGC</span>                     <span class="token operator">=</span> <span class="token boolean">false</span>                                  <span class="token punctuation">{</span>manageable<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token keyword">default</span><span class="token punctuation">}</span>
     bool <span class="token class-name">HeapDumpOnOutOfMemoryError</span>               <span class="token operator">=</span> <span class="token boolean">false</span>                                  <span class="token punctuation">{</span>manageable<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token keyword">default</span><span class="token punctuation">}</span>
    ccstr <span class="token class-name">HeapDumpPath</span>                             <span class="token operator">=</span>                                        <span class="token punctuation">{</span>manageable<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token keyword">default</span><span class="token punctuation">}</span>
    uintx <span class="token class-name">MaxHeapFreeRatio</span>                         <span class="token operator">=</span> <span class="token number">70</span>                                     <span class="token punctuation">{</span>manageable<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token keyword">default</span><span class="token punctuation">}</span>
    uintx <span class="token class-name">MinHeapFreeRatio</span>                         <span class="token operator">=</span> <span class="token number">40</span>                                     <span class="token punctuation">{</span>manageable<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token keyword">default</span><span class="token punctuation">}</span>
     bool <span class="token class-name">PrintClassHistogram</span>                      <span class="token operator">=</span> <span class="token boolean">false</span>                                  <span class="token punctuation">{</span>manageable<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token keyword">default</span><span class="token punctuation">}</span>
     bool <span class="token class-name">PrintConcurrentLocks</span>                     <span class="token operator">=</span> <span class="token boolean">false</span>                                  <span class="token punctuation">{</span>manageable<span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token keyword">default</span><span class="token punctuation">}</span>
java version <span class="token string">&quot;11&quot;</span> <span class="token number">2018</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">25</span>
<span class="token class-name">Java</span><span class="token punctuation">(</span><span class="token constant">TM</span><span class="token punctuation">)</span> <span class="token constant">SE</span> <span class="token class-name">Runtime</span> <span class="token class-name">Environment</span> <span class="token number">18.9</span> <span class="token punctuation">(</span>build <span class="token number">11</span><span class="token operator">+</span><span class="token number">28</span><span class="token punctuation">)</span>
<span class="token class-name">Java</span> <span class="token class-name">HotSpot</span><span class="token punctuation">(</span><span class="token constant">TM</span><span class="token punctuation">)</span> <span class="token number">64</span><span class="token operator">-</span><span class="token class-name">Bit</span> <span class="token class-name">Server</span> <span class="token constant">VM</span> <span class="token number">18.9</span> <span class="token punctuation">(</span>build <span class="token number">11</span><span class="token operator">+</span><span class="token number">28</span><span class="token punctuation">,</span> mixed mode<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>jstack</strong></p><p>jstack命令（帮助文档）可以用来打印目标 Java 进程中各个线程的栈轨迹，以及这些线程所持有的锁。</p><p>jstack的其中一个应用场景便是死锁检测。这里我用jstack获取一个已经死锁了的 Java 程序的栈信息。具体输出如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>$ jstack <span class="token number">31634</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token string">&quot;Thread-0&quot;</span> #<span class="token number">12</span> prio<span class="token operator">=</span><span class="token number">5</span> os_prio<span class="token operator">=</span><span class="token number">31</span> cpu<span class="token operator">=</span><span class="token number">1.32</span>ms elapsed<span class="token operator">=</span><span class="token number">34.24</span>s tid<span class="token operator">=</span><span class="token number">0x00007fb08601c800</span> nid<span class="token operator">=</span><span class="token number">0x5d03</span> waiting <span class="token keyword">for</span> monitor entry  <span class="token punctuation">[</span><span class="token number">0x000070000bc7e000</span><span class="token punctuation">]</span>
   <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread<span class="token punctuation">.</span>State</span><span class="token operator">:</span> <span class="token constant">BLOCKED</span> <span class="token punctuation">(</span>on object monitor<span class="token punctuation">)</span>
 at <span class="token class-name">DeadLock</span><span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name">DeadLock</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">)</span>
 <span class="token operator">-</span> waiting <span class="token keyword">to</span> <span class="token namespace">lock</span> <span class="token generics"><span class="token punctuation">&lt;</span>0x000000061ff904c0<span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span>a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">)</span>
 <span class="token operator">-</span> locked <span class="token generics"><span class="token punctuation">&lt;</span>0x000000061ff904b0<span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span>a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">)</span>
 at <span class="token class-name">DeadLock</span>$$<span class="token class-name">Lambda</span>$<span class="token number">1</span><span class="token operator">/</span><span class="token number">0x0000000800060840</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Unknown</span> <span class="token class-name">Source</span><span class="token punctuation">)</span>
 at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>java<span class="token punctuation">.</span>base<span class="token annotation punctuation">@11</span><span class="token operator">/</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">834</span><span class="token punctuation">)</span>

<span class="token string">&quot;Thread-1&quot;</span> #<span class="token number">13</span> prio<span class="token operator">=</span><span class="token number">5</span> os_prio<span class="token operator">=</span><span class="token number">31</span> cpu<span class="token operator">=</span><span class="token number">1.43</span>ms elapsed<span class="token operator">=</span><span class="token number">34.24</span>s tid<span class="token operator">=</span><span class="token number">0x00007fb08601f800</span> nid<span class="token operator">=</span><span class="token number">0x5f03</span> waiting <span class="token keyword">for</span> monitor entry  <span class="token punctuation">[</span><span class="token number">0x000070000bd81000</span><span class="token punctuation">]</span>
   <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread<span class="token punctuation">.</span>State</span><span class="token operator">:</span> <span class="token constant">BLOCKED</span> <span class="token punctuation">(</span>on object monitor<span class="token punctuation">)</span>
 at <span class="token class-name">DeadLock</span><span class="token punctuation">.</span><span class="token function">bar</span><span class="token punctuation">(</span><span class="token class-name">DeadLock</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">33</span><span class="token punctuation">)</span>
 <span class="token operator">-</span> waiting <span class="token keyword">to</span> <span class="token namespace">lock</span> <span class="token generics"><span class="token punctuation">&lt;</span>0x000000061ff904b0<span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span>a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">)</span>
 <span class="token operator">-</span> locked <span class="token generics"><span class="token punctuation">&lt;</span>0x000000061ff904c0<span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span>a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">)</span>
 at <span class="token class-name">DeadLock</span>$$<span class="token class-name">Lambda</span>$<span class="token number">2</span><span class="token operator">/</span><span class="token number">0x0000000800063040</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Unknown</span> <span class="token class-name">Source</span><span class="token punctuation">)</span>
 at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>java<span class="token punctuation">.</span>base<span class="token annotation punctuation">@11</span><span class="token operator">/</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">834</span><span class="token punctuation">)</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token constant">JNI</span> global refs<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> weak refs<span class="token operator">:</span> <span class="token number">0</span>


<span class="token class-name">Found</span> one <span class="token class-name">Java</span><span class="token operator">-</span>level deadlock<span class="token operator">:</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token string">&quot;Thread-0&quot;</span><span class="token operator">:</span>
  waiting <span class="token keyword">to</span> <span class="token namespace">lock</span> monitor <span class="token number">0x00007fb083015900</span> <span class="token punctuation">(</span>object <span class="token number">0x000000061ff904c0</span><span class="token punctuation">,</span> a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  which is held by <span class="token string">&quot;Thread-1&quot;</span>
<span class="token string">&quot;Thread-1&quot;</span><span class="token operator">:</span>
  waiting <span class="token keyword">to</span> <span class="token namespace">lock</span> monitor <span class="token number">0x00007fb083015800</span> <span class="token punctuation">(</span>object <span class="token number">0x000000061ff904b0</span><span class="token punctuation">,</span> a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  which is held by <span class="token string">&quot;Thread-0&quot;</span>

<span class="token class-name">Java</span> stack information <span class="token keyword">for</span> the threads listed above<span class="token operator">:</span>
<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token string">&quot;Thread-0&quot;</span><span class="token operator">:</span>
 at <span class="token class-name">DeadLock</span><span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token class-name">DeadLock</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">)</span>
 <span class="token operator">-</span> waiting <span class="token keyword">to</span> <span class="token namespace">lock</span> <span class="token generics"><span class="token punctuation">&lt;</span>0x000000061ff904c0<span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span>a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">)</span>
 <span class="token operator">-</span> locked <span class="token generics"><span class="token punctuation">&lt;</span>0x000000061ff904b0<span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span>a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">)</span>
 at <span class="token class-name">DeadLock</span>$$<span class="token class-name">Lambda</span>$<span class="token number">1</span><span class="token operator">/</span><span class="token number">0x0000000800060840</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Unknown</span> <span class="token class-name">Source</span><span class="token punctuation">)</span>
 at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>java<span class="token punctuation">.</span>base<span class="token annotation punctuation">@11</span><span class="token operator">/</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">834</span><span class="token punctuation">)</span>
<span class="token string">&quot;Thread-1&quot;</span><span class="token operator">:</span>
 at <span class="token class-name">DeadLock</span><span class="token punctuation">.</span><span class="token function">bar</span><span class="token punctuation">(</span><span class="token class-name">DeadLock</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">33</span><span class="token punctuation">)</span>
 <span class="token operator">-</span> waiting <span class="token keyword">to</span> <span class="token namespace">lock</span> <span class="token generics"><span class="token punctuation">&lt;</span>0x000000061ff904b0<span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span>a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">)</span>
 <span class="token operator">-</span> locked <span class="token generics"><span class="token punctuation">&lt;</span>0x000000061ff904c0<span class="token punctuation">&gt;</span></span> <span class="token punctuation">(</span>a <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Object</span><span class="token punctuation">)</span>
 at <span class="token class-name">DeadLock</span>$$<span class="token class-name">Lambda</span>$<span class="token number">2</span><span class="token operator">/</span><span class="token number">0x0000000800063040</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Unknown</span> <span class="token class-name">Source</span><span class="token punctuation">)</span>
 at <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>java<span class="token punctuation">.</span>base<span class="token annotation punctuation">@11</span><span class="token operator">/</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">834</span><span class="token punctuation">)</span>

<span class="token class-name">Found</span> <span class="token number">1</span> deadlock<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以看到，jstack不仅会打印线程的栈轨迹、线程状态（BLOCKED）、持有的锁（locked …）以及正在请求的锁（waiting to lock …），而且还会分析出具体的死锁。</p><p><strong>jcmd</strong></p><p>你还可以直接使用jcmd命令（帮助文档），来替代前面除了jstat之外的所有命令。具体的替换规则你可以参考下表。</p><p>至于jstat的功能，虽然jcmd复制了jstat的部分代码，并支持通过PerfCounter.print子命令来打印所有的 Performance Counter，但是它没有保留jstat的输出格式，也没有重复打印的功能。因此，感兴趣的同学可以自行整理。</p><p>另外，我们将在下一篇中介绍jcmd中 Java Flight Recorder 相关的子命令。</p><p><strong>总结与实践</strong></p><p>今天我介绍了 JDK 中用于监控及诊断的命令行工具。我们再来回顾一下。</p><ol><li></li></ol><p>jps将打印所有正在运行的 Java 进程。</p><ol start="2"><li></li></ol><p>jstat允许用户查看目标 Java 进程的类加载、即时编译以及垃圾回收相关的信息。它常用于检测垃圾回收问题以及内存泄漏问题。</p><ol start="3"><li></li></ol><p>jmap允许用户统计目标 Java 进程的堆中存放的 Java 对象，并将它们导出成二进制文件。</p><ol start="4"><li></li></ol><p>jinfo将打印目标 Java 进程的配置参数，并能够改动其中 manageabe 的参数。</p><ol start="5"><li></li></ol><p>jstack将打印目标 Java 进程中各个线程的栈轨迹、线程状态、锁状况等信息。它还将自动检测死锁。</p><ol start="6"><li></li></ol><p>jcmd则是一把瑞士军刀，可以用来实现前面除了jstat之外所有命令的功能。</p><p>今天的实践环节，你可以探索jcmd中的下述功能，看看有没有适合你项目的监控项：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Compiler<span class="token punctuation">.</span>CodeHeap_Analytics</span>
<span class="token class-name">Compiler</span><span class="token punctuation">.</span>codecache
<span class="token class-name">Compiler</span><span class="token punctuation">.</span>codelist
<span class="token class-name">Compiler</span><span class="token punctuation">.</span>directives_add
<span class="token class-name">Compiler</span><span class="token punctuation">.</span>directives_clear
<span class="token class-name">Compiler</span><span class="token punctuation">.</span>directives_print
<span class="token class-name">Compiler</span><span class="token punctuation">.</span>directives_remove
<span class="token class-name">Compiler</span><span class="token punctuation">.</span>queue
<span class="token constant">GC</span><span class="token punctuation">.</span>class_histogram
<span class="token constant">GC</span><span class="token punctuation">.</span>class_stats
<span class="token constant">GC</span><span class="token punctuation">.</span>finalizer_info
<span class="token constant">GC</span><span class="token punctuation">.</span>heap_dump
<span class="token constant">GC</span><span class="token punctuation">.</span>heap_info
<span class="token constant">GC</span><span class="token punctuation">.</span>run
<span class="token constant">GC</span><span class="token punctuation">.</span>run_finalization
<span class="token constant">VM</span><span class="token punctuation">.</span>class_hierarchy
<span class="token constant">VM</span><span class="token punctuation">.</span>classloader_stats
<span class="token constant">VM</span><span class="token punctuation">.</span>classloaders
<span class="token constant">VM</span><span class="token punctuation">.</span>command_line
<span class="token constant">VM</span><span class="token punctuation">.</span>dynlibs
<span class="token constant">VM</span><span class="token punctuation">.</span>flags
<span class="token constant">VM</span><span class="token punctuation">.</span>info
<span class="token constant">VM</span><span class="token punctuation">.</span>log
<span class="token constant">VM</span><span class="token punctuation">.</span>metaspace
<span class="token constant">VM</span><span class="token punctuation">.</span>native_memory
<span class="token constant">VM</span><span class="token punctuation">.</span>print_touched_methods
<span class="token constant">VM</span><span class="token punctuation">.</span>set_flag
<span class="token constant">VM</span><span class="token punctuation">.</span>stringtable
<span class="token constant">VM</span><span class="token punctuation">.</span>symboltable
<span class="token constant">VM</span><span class="token punctuation">.</span>system_properties
<span class="token constant">VM</span><span class="token punctuation">.</span>systemdictionary
<span class="token constant">VM</span><span class="token punctuation">.</span>unlock_commercial_features
<span class="token constant">VM</span><span class="token punctuation">.</span>uptime
<span class="token constant">VM</span><span class="token punctuation">.</span>version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,90),o=[e];function c(l,u){return s(),a("div",null,o)}const i=n(t,[["render",c],["__file","R30-监控诊断工具(上).html.vue"]]);export{i as default};
