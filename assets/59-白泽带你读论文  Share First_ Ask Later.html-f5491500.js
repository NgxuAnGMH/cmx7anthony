import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as i,c as o,a,b as p,e as n,d as s}from"./app-cdabc73c.js";const d="/assets/640-1691390094552-135-99384652.png",h="/assets/640-1691390094552-136-1d916673.png",c="/assets/640-1691390094552-137-a37e641a.png",g="/assets/640-1691390094552-138-e0146d9b.png",l="/assets/640-1691390094553-139-bc6b5833.png",_="/assets/640-1691390094553-140-2600d335.png",f="/assets/640-1691390094553-141-e0760a6a.jpeg",u={},b=a("h1",{id:"_59-白泽带你读论文-share-first-ask-later",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_59-白泽带你读论文-share-first-ask-later","aria-hidden":"true"},"#"),p(" 59-白泽带你读论文 | Share First, Ask Later")],-1),m={href:"https://www.usenix.org/system/files/sec21-nguyen.pdf",target:"_blank",rel:"noopener noreferrer"},x=s('<p><strong>Share First, Ask Later (or Never?) Studying Violations of GDPR’s Explicit Consent in Android Apps</strong></p><p>如需转载请注明出处，侵权必究。</p><p>本文通过建立一套半自动化的流量分析框架，大规模分析了移动应用程序违反《通用数据保护条例》（GDPR）中关于用户知情权的规定，发现了24838个app<em>在未经用户同意的情况下将个人数据发送给第三方域名</em>，为了进一步理解这种现象的原因，本文还告知了相关开发者并收集了反馈结果。</p><h2 id="_1-研究背景" tabindex="-1"><a class="header-anchor" href="#_1-研究背景" aria-hidden="true">#</a> 1. 研究背景</h2><p>现如今在线广告行业正在越来越频繁地收集用户个人数据信息，为了保护用户隐私，近年来全球范围内的监管措施已经出台，如《通用数据保护条例》（GDPR）和《加州消费者隐私法》（CCPA）等，要求在线服务提供商公开披露他们如何处理用户个人数据并保障用户权利。本文使用GDPR作为合法性分析基础，研究app是否未经用户同意就发送所收集的用户个人数据。</p><h3 id="_1-1-个人数据定义" tabindex="-1"><a class="header-anchor" href="#_1-1-个人数据定义" aria-hidden="true">#</a> <strong>1.1 个人数据定义</strong></h3><p>根据GDPR规定，&quot;个人数据&quot;指的是任何可以对应识别出一个自然人的信息，包括广告ID、位置信息以及在线标识符（如IP Address）等，这些信息可用于<em>长期地、跨应用程序地追踪用户</em>。</p><h3 id="_1-2-处理个人数据" tabindex="-1"><a class="header-anchor" href="#_1-2-处理个人数据" aria-hidden="true">#</a> <strong>1.2 处理个人数据</strong></h3><p>在GDPR规定下，处理用户个人数据必须具有合法理由。应用程序开发者作为第一方，通过处理用户个人数据来提供应用功能和服务，他们被称为&quot;数据控制者&quot;。而独立于应用程序的第三方开发者则分为两种情况，如果他们纯粹代表第一方行事，没有出于自身目的使用用户数据，且在第一方的完全控制之下（如程序错误记录），则他们被称为&quot;数据处理者&quot;；如果他们出于自身目的处理用户数据（如为了市场分析，使用用户数据盈利或提升服务），那么他们也充当数据控制者。</p><h3 id="_1-3-明确同意" tabindex="-1"><a class="header-anchor" href="#_1-3-明确同意" aria-hidden="true">#</a> <strong>1.3 明确同意</strong></h3><p>GDPR要求厂商在传输用户数据前征得用户的明确同意，这种请求同意必须是用户自由自愿的、具体的、用户知情的和明确的。用户须点击同意表单上的&quot;我同意&quot;才视为主动同意，仅仅是继续使用应用程序或其他被动行为不构成明确同意。最后，只在事先获得用户同意，数据处理行为才可被视为有效，因此，未经用户同意将数据传输给广告公司用于定向广告被视为GDPR。</p><h2 id="_2-方法设计" tabindex="-1"><a class="header-anchor" href="#_2-方法设计" aria-hidden="true">#</a> 2. 方法设计</h2><p>本文的目标是根据GDPR规定，提供一套较为自动化和可扩展的方案来检测未经用户明确同意就发送个人数据的情况。本文在一些列安卓设备上运行每个应用程序（不进行任何交互）<em>并捕获网络流量</em>。通过字符串匹配和编码转换检测识别流量中可用于关联到设备的个人数据（具体数据类型如Table 1所示），此外，推导出一种方法来定位其他可能是唯一标识符的数据，<em>并手动验证其是否可用于追踪用户或设备</em>。</p><figure><img src="'+d+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h3 id="_2-1-设置和流量收集" tabindex="-1"><a class="header-anchor" href="#_2-1-设置和流量收集" aria-hidden="true">#</a> <strong>2.1 设置和流量收集</strong></h3><p>本文在六台已root的设备（Pixels, Pixel 3a, Nexus 5）上运行安卓8或9。为了截获TLS流量，本文使用自己的root证书（即使用MitM代理）。</p><p>分析流程的第一步的目标是确定启动时会发送数据的app，方法是安装待检测app，并授予其全部的安装时权限和运行时权限，随后启动该app并记录其网络流量，部分app在首次启动时没有加载，因此将其关闭再重新打开，以增加观察流量的机会。如果一个app在这两次启动中都没有显示流量，则不对其进行后续分析。</p><h3 id="_2-2-流量分析" tabindex="-1"><a class="header-anchor" href="#_2-2-流量分析" aria-hidden="true">#</a> <strong>2.2 流量分析</strong></h3><p>​ <strong>2.2.1 字符串匹配设备绑定数据</strong></p><p>本文关注的第一类数据是绑定到设备上的数据，例如位置、AAID或MAC地址。用简单的字符串匹配来识别静态的和预先已知的个人数据类型，包括绑定到设备的持久标识符（例如IMEI、WiFi接口的MAC地址和AAID）以及其他敏感的标识符，例如设备所有者的姓名、电子邮件地址或电话号码。对于地理位置数据，搜索以浮点数形式写入的精确纬度和经度，并将这些值四舍五入到小数点后3、4和5位。</p><p>除了简单的字符串匹配，还会搜索常用的变换，例如大/小写、哈希（如MD5、SHA-1）或编码（如base64）</p><p>​ <strong>2.2.2 潜在唯一标识符检测</strong></p><p>本文关注的第二类数据是其他潜在的可用于追踪和分析个人的参数，包括模糊使用公共标识符的情况，以及app生成持久标识符并将其储存在本地的情况。对于一个app，本文会进行多轮不同设备上的流量分析，具体分为四步：</p><figure><img src="'+h+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ol><li>①在设备P1上，首先运行R1轮并捕获app的所有流量，识别出流量中的所有通讯的域名和参数t1，如果该app未发送网络数据（t1 = {}），则跳过后续步骤。</li><li>②在同一设备P1上，运行R2轮（安装和两轮打开/关闭操作）。在进行第二轮之前会卸载app并将设备时间向未来调一天。这么做的原因是如果一个app发送持久标识符，将不会随时间变化而改变，在两轮流量中不同的部分就不会是持久标识符（例如日期，需要剔除）。保留两轮流量中不变的部分（c1 = stable(t1, t2)）如果c1 = {}，则终止分析。</li><li>③在另一台设备P2上，运行R3轮提取流量信息t3，对于在两台设备上爆出不变的信息（stable(c1, t3)），本文假设其与app相关（例如一些app特定token，从而需要剔除）。在R1和R2中保持不变且与R3中不同的信息（c2 = diff(c1, t3)）进行后续分析。</li><li>④考虑到使用手机的多样性，c2中的差异可能仅仅是由品牌信号或操作系统版本造成的。为了消除这种影响，本文还在两台品牌、型号和操作系统版本相同（Piexel 3a和安卓9）的手机运行R4和R5轮。假设这两次运行的结果是稳定的（stable(t4,t5) ≠ {}），在这种情况下，相关的参数与设备型号和系统版本相关，不是一个可用的追踪标识符，需要剔除。最后一步的输出是c3 = diff(c2, stable(t4, t5))</li></ol><p>最后，得到了一个高度过滤后的持久标识符候选集合，然后进行人工检查，确保它们不包含误报。具体来说，移除了低熵条目（例如运营商、时区或LAN IP），忽略了不具识别能力的参数名（例如helpshift.com上的rs参数）。</p><h2 id="_3-大规模分析" tabindex="-1"><a class="header-anchor" href="#_3-大规模分析" aria-hidden="true">#</a> 3. 大规模分析</h2><h3 id="_3-1-app数据集构建" tabindex="-1"><a class="header-anchor" href="#_3-1-app数据集构建" aria-hidden="true">#</a> <strong>3.1 App数据集构建</strong></h3><p>为了同时研究应用商店中头部app和长尾app（中下游app）违反GDPR的情况并观察是否存在差异，本文选取了两种app数据集，共包括86163个app。</p><p>头部app数据集：本文基于AppBrain数据爬取了2020年5月Google Play上的免费top app。共得到16163个头部app，来自33个app分类。</p><p>长尾app数据集：本文从德国应用商店上爬取了2020年5月到9月之间的超过一百万个免费安卓app。过滤了其中没有集成广告库的app并随机选取了下载量10000以上的app，最终得到70000个用于app用于测试。由于这样的过滤会带来数据集上的偏向性，本文对头部app数据集也进行了同样的过滤。</p><h3 id="_3-2-网络流量分析" tabindex="-1"><a class="header-anchor" href="#_3-2-网络流量分析" aria-hidden="true">#</a> <strong>3.2 网络流量分析</strong></h3><figure><img src="'+c+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>除去分析失败（程序崩溃、运行环境受限等）的情况，合并子域名后，本文确定了向7384个域名发送个人数据的28665个app。如Table 3所示，其中有28065（97.9%）个app将个人数据发送给209个第三方域名（仅占所有收到个人数据的域名的12.0%）。这一结果表明，只有极少数第一方收集个人数据，大部分个人数据发送给了第三方，开发人员严重依赖第三方实现各种目的，如个性化广告、错误记录、分析服务、社交网络集成等。如果第三方充当数据控制者（本身从数据获益），GDPR要求其获得用户明确同意，因此本文关注可以明确确定其具有自身目的的领域，即广告。</p><h3 id="_3-3-违规深度分析" tabindex="-1"><a class="header-anchor" href="#_3-3-违规深度分析" aria-hidden="true">#</a> <strong>3.3 违规深度分析</strong></h3><p>​ <strong>3.3.1 识别主要玩家</strong></p><figure><img src="'+g+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>Figure 3显示的是接受个人数据前10名的广告相关域名，统计了向它们发送数据的应用程序的数量。发现超过一半的未经同意发送数据的app将数据发送到Facebook。值得注意的是，Facebook使得GDPR合规性对于开发者来说难以实现，根据Facebook的文档所述，其SDK默认假定用户同意，也就是说，开发者必须主动禁用个人信息的自动传输，并自行请求用户同意。</p><p>第二流行的数据接收者是Unity，其SDK提供两种请求同意方式：开发者通过API调用请求同意，或者开发者依赖Unity的解决方案，该方案询问用户何时显示第一个广告。然而本文认为这是一种&quot;选择退出&quot;机制，而不是&quot;选择加入&quot;，因为它们的广告先传输数据，然后要求用户选择退出。</p><p>第三大接收者Flurry也支持同意API，但文档中的默认行为不明确，也没有关于正确实现的重要细节。</p><p>​ <strong>3.3.2 结合多种标识符</strong></p><p>根据谷歌的AAID使用政策，AAID只能用于广告和用户分析，且AAID只能在用户明确同意的情况下连接到其他个人识别信息。本文发现共有3840个app将AAID与其他类型的个人信息相结合，因此这些app不仅违反了GDPR要求的明确同意，还违反了谷歌的政策，结果如Table 4所示。</p><figure><img src="'+l+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>​ <strong>3.3.3 比较数据集</strong></p><figure><img src="'+_+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>本文对头部app和长尾app两个数据集的结果进行了比较，如Figure 4展示了两个数据集中app最常发送个人数据的域名所占的百分比。可以发现facebook.com在两个数据集中都是最流行的域名，在头部app中比在长尾app中更明显。与之相对的，unity3d.com则是在长尾app中更流行。</p><p>总体来说，在头部app和长尾app中，未经明确同意发送个人数据的现象发生得同样频繁，参与方也同样多，虽然观察到了统计上的显著差异，但相关效应的大小可以忽略不计。</p><h2 id="_4-通知开发者" tabindex="-1"><a class="header-anchor" href="#_4-通知开发者" aria-hidden="true">#</a> 4. 通知开发者</h2><p>除了分析工作之外，本文还通知了受影响的开发者，这样做的目的是：</p><p>第一，导致他们可能违反GDPR法规，这可能导致严重罚款；</p><p>第二，希望深入了解导致违规现象的根本原因。本文通过联系开发者的电子邮件地址，向其发送了一个指向本文作者web界面的链接，在其中简要介绍了测试方法与结果。此外，还调查询问了是开发者是否意识到他们的app违反GDPR，他们对GDPR喜爱个人数据的一般理解，他们解决问题的计划以及建议。共通知了11914名开发者，涉及17795个app。</p><p>在448名回应的受访者中，有114人承认收到电子邮件，54人表示他们需要在各自的公司或第三方SDK提供商内部进行进一步调查，48人进一步询问了该问题的潜在解决方案，例如添加隐私政策以解释数据收集，20人认为欧盟不是他们的主要市场，因此GDPR不适用于他们。</p><p>另一方面，116名受访者不同意本文的评估，部分误认为展示事先隐私政策就是请求同意，最极端的情况是某些开发者认为完全支持GDPR是不可行的。他们认为自己没有做错什么，应该由SDK来提供合规支持。</p><h2 id="_5-呼吁行动" tabindex="-1"><a class="header-anchor" href="#_5-呼吁行动" aria-hidden="true">#</a> 5. 呼吁行动</h2><p>本文的测试结果表明与第三方共享个人数据非常普遍，因此作者提出以下可以采取的补救措施：第三方应当负起责任，默认限制数据收集，主动请求用户同意。应用市场应在开发者上传app时告知其遵守所选国家的相关法律，采取类似本文的方法识别违反法律法规的app。开发者需要更清晰透明的文档支持来协助开发。</p><h2 id="_6-总结" tabindex="-1"><a class="header-anchor" href="#_6-总结" aria-hidden="true">#</a> 6. 总结</h2><p>本文对86163个安卓app进行了实证研究，从而了解违反GDPR明确同意规定的现状。本文发现了24838个app未经用户明确同意向广告提供商发送个人数据。通过分析结果，本文发现了该问题的普遍性和重要性，并向相关方提出改进措施。</p><h2 id="_7-思考与讨论" tabindex="-1"><a class="header-anchor" href="#_7-思考与讨论" aria-hidden="true">#</a> 7. 思考与讨论</h2><p><strong>Q1: 本文的分析方法有什么缺陷？</strong></p><p>A1:如文中所述：</p><ol><li>部分app会有一个欢迎页，这个与请求同意发送数据无关，但是一旦用户与其交互就会发送数据，本文的方法无法检测这种情况（可能造成漏报，因为本文方法不处理欢迎页交互）</li><li>某些运行时权限申请通过后会自动发送数据（可能造成误报，因为本文方法是自动通过权限申请的），但是作者认为权限申请不等于请求同意发送数据，大部分开发者不会在申请权限时说明理由，而且Android 5之前不存在运行时权限申请，所以不能在权限申请时请求同意发送</li><li>一些运行问题：app安全机制不支持root设备、安卓8系统不支持等（可能造成漏报）</li><li>app可能更改标识符加密密钥或使用自定义加密方式，遇到这种无法解密的作者直接扔掉了，以避免误报。</li></ol><p><strong>Q2：作者的Method中Potentially Unique Tracking Identifiers Detector有四个筛选步骤，对于这四个步骤顺序可以改变？如果不能，为什么（即，是否会对筛选结果造成影响）？如果能，是否有必要改变顺序（即是否会有效率上的提高）？</strong></p><p>A2：能，4轮筛选是迭代式的，每一轮的输入都是上一轮的输出，由于第一轮是抓包结果的全集，因此最好不要更换顺序，剩余的三轮可以任意更换顺序而不会对结果产生影响，因为最终能保留下来的结果是三次筛选的交集，而取交运算满足交换律；对于是否有必要改变顺序可以从性能角度考虑，尽可能在早期筛选掉足够多的数据，这样在接下来的筛选中只需要比较更少的数据。但是本文没有考虑这个问题可能是这个筛选的步骤本来开销就不大。</p><p><strong>Q3：开发者遵循GDPR的难点有哪些？</strong></p><p>A3：有些app版本过时，不维护；开发者没有意识到自己的问题，以至于仍然认为自己已经遵循GDPR；开发时依赖第三方sdk来保证遵循GDPR；开发成本更大等。</p><p><strong>Q4: 为什么做大规模分析时的数据集要分成High-profile app和Long-tail app？</strong></p><p>A4: 这里的High-profile和Long-tail app其实指的是top app和不那么top的app，Long-tail直译为长尾，意思是不处在头部的大多数，如下图</p><figure><img src="'+f+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>作者想要比较一下在不同流行程度的app中，违反GDPR规定的情况有什么异同。</p><p><strong>Q5:本文的方法能否迁移至iOS？</strong></p><p>A5:本文基于的技术比较简单，<em>只涉及到流量分析</em>，iOS环境下要解决的主要问题也是证书校验问题，也有相关的工具能够达到与安卓平台下objection几乎相同的效果，因此将本文的工作迁移至iOS理论上难度不大。但是可能会存在App Store和google play审核机制不同导致的一些其他问题，比如，本文提到的在用户明确同意隐私政策之前上传用户信息的app将不会在App Store中上架。</p>',71);function A(D,P){const e=r("ExternalLinkIcon");return i(),o("div",null,[b,a("p",null,[a("a",m,[p("sec21-nguyen.pdf (usenix.org)"),n(e)]),p("。")]),x])}const k=t(u,[["render",A],["__file","59-白泽带你读论文  Share First_ Ask Later.html.vue"]]);export{k as default};
