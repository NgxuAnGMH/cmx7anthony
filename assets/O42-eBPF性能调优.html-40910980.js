const e=JSON.parse('{"key":"v-0515c10a","path":"/Universal/LinuxOS/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E5%AE%9E%E6%88%98%E8%AF%BE/O42-eBPF%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98.html","title":"42｜性能调优：性能调优工具eBPF和调优方法","lang":"zh-CN","frontmatter":{"date":"2023-04-27T00:00:00.000Z","shortTitle":"O42-eBPF性能调优","tag":["eBPF"]},"headers":[{"level":2,"title":"从 BPF 到 eBPF","slug":"从-bpf-到-ebpf","link":"#从-bpf-到-ebpf","children":[]},{"level":2,"title":"如何使用 eBPF","slug":"如何使用-ebpf","link":"#如何使用-ebpf","children":[]},{"level":2,"title":"eBPF 的核心原理","slug":"ebpf-的核心原理","link":"#ebpf-的核心原理","children":[{"level":3,"title":"1 用户态 & 内核态","slug":"_1-用户态-内核态","link":"#_1-用户态-内核态","children":[]},{"level":3,"title":"2 通过BPF-Map双向通信","slug":"_2-通过bpf-map双向通信","link":"#_2-通过bpf-map双向通信","children":[]},{"level":3,"title":"3 内核中：自定义程序如何编织内核代码","slug":"_3-内核中-自定义程序如何编织内核代码","link":"#_3-内核中-自定义程序如何编织内核代码","children":[]},{"level":3,"title":"4 BPF程序类型","slug":"_4-bpf程序类型","link":"#_4-bpf程序类型","children":[]}]},{"level":2,"title":"eBPF 还能应用在哪里？","slug":"ebpf-还能应用在哪里","link":"#ebpf-还能应用在哪里","children":[{"level":3,"title":"Cilium","slug":"cilium","link":"#cilium","children":[]},{"level":3,"title":"Falco","slug":"falco","link":"#falco","children":[]},{"level":3,"title":"eBPF for Windows","slug":"ebpf-for-windows","link":"#ebpf-for-windows","children":[]}]},{"level":2,"title":"重点回顾","slug":"重点回顾","link":"#重点回顾","children":[]},{"level":2,"title":"思考题","slug":"思考题","link":"#思考题","children":[]}],"git":{"createdTime":1693389039000,"updatedTime":1693389039000,"contributors":[{"name":"安东尼","email":"109900456+NgxuAnGMH@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":14.37,"words":4312},"filePathRelative":"Universal/LinuxOS/计算机基础实战课/O42-eBPF性能调优.md","localizedDate":"2023年4月27日","excerpt":""}');export{e as data};
