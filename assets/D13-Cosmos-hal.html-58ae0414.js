import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as l,c as o,d as c}from"./app-cdabc73c.js";const a={},i=c('<h1 id="cosmos-hal" tabindex="-1"><a class="header-anchor" href="#cosmos-hal" aria-hidden="true">#</a> Cosmos\\hal\\</h1><h3 id="文件夹-x86" tabindex="-1"><a class="header-anchor" href="#文件夹-x86" aria-hidden="true">#</a> 文件夹 x86</h3><p>。。</p><p><code>init_entry.asm</code>: CPU 进入了长模式，寄存器的位宽都变了，所以需要重新初始化。之后调用了hal_start.c</p><p><code>hal_start.c</code>: 首先进行 hal 层（硬件抽象层）初始化，最后进入到内核层的初始化。</p><ul><li><code>halinit.c</code>: 初始化 hal 层 <ul><li><code>halglobal.c</code>: 有关 hal 层的全局变量</li><li><code>halplatform.c</code>: 1 初始化平台 <ul><li><code>bdvideo.c</code>: 图形驱动相关初始化</li></ul></li><li><code>halmm.c</code>: 2 初始化内存</li><li><code>kernel.asm</code>: 3 初始化中断(中断处理程序的入口地址) <ul><li><code>halgdtidt.c</code>: 函数设置中断门描述符</li><li><code>halintupt.c</code>: 中断的具体调用路径，供上层使用</li><li><code>i8259.c</code>: 中断控制器</li></ul></li></ul></li><li><strong>初始化内核层 ! (待办)</strong></li></ul>',6),d=[i];function t(s,h){return l(),o("div",null,d)}const _=e(a,[["render",t],["__file","D13-Cosmos-hal.html.vue"]]);export{_ as default};
