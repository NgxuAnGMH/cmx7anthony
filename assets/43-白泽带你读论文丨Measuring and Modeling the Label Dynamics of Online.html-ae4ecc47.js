import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as s,c as o,a,b as i,e as t,d as p}from"./app-cdabc73c.js";const l="/assets/640-1691465123184-171-955eaad6.png",g="/assets/640-1691465123184-172-fd401cf0.png",c="/assets/640-1691465123184-173-2686ba04.png",d="/assets/640-1691465123184-174-5a8277d7.png",u="/assets/640-1691465123184-175-a4d77b53.png",f="/assets/640-1691465123184-176-fcfadb59.png",_="/assets/640-1691465123185-177-716a4e5f.png",h="/assets/640-1691465123185-178-c8847abf.png",m="/assets/640-1691465123185-179-51395670.png",b="/assets/640-1691465123185-180-17adb1d8.png",x="/assets/640-1691465123185-181-41779438.png",z="/assets/640-1691465123185-182-21f6d900.png",y="/assets/640-1691465123185-183-3161553e.png",V={},I=a("h1",{id:"_43-白泽带你读论文丨measuring-and-modeling-the-label-dynamics-of-online",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_43-白泽带你读论文丨measuring-and-modeling-the-label-dynamics-of-online","aria-hidden":"true"},"#"),i(" 43-白泽带你读论文丨Measuring and Modeling the Label Dynamics of Online")],-1),T=a("p",null,[a("strong",null,"Measuring and Modeling the Label Dynamics of Online Anti-Malware Engines")],-1),w={href:"https://www.usenix.org/system/files/sec20fall_zhu_prepub.pdf",target:"_blank",rel:"noopener noreferrer"},M={href:"https://sfzhu93.github.io/projects/vt/index.html",target:"_blank",rel:"noopener noreferrer"},k=p('<p>本文发表在the proceedings of the 29th Usenix Security Symposium 2020，第一作者是来自宾夕法尼亚州立大学的Shuofei Zhu，本篇论文成果来自宾夕法尼亚州立大学信息科学与技术学院的Linhai Song老师所领衔的研究组，该研究组主要关注系统、安全以及软工等研究领域。</p><h2 id="_1-主要内容" tabindex="-1"><a class="header-anchor" href="#_1-主要内容" aria-hidden="true">#</a> <strong>1 主要内容</strong></h2><p><mark>VirusTotal</mark>这一包含了超过70多家不同安全厂商的在线反恶意软件引擎平台，因其公开和免费的特性，目前无论是在工业界还是学术界皆已然成为使用非常广泛的反恶意软件平台。学术界内先前也已经出现过非常多利用VirusTotal中提供的扫描结果作为实验benchmark的论文工作。但作者团队发现VirusTotal这一在线反恶意软件引擎平台存在各家不同引擎厂商给某一文件打出的恶意或非恶意标签会随时间发生反转的情况，即标签动态变化问题。因此，作者相应地做了此方面的评估工作。</p><p>首先作者团队调研了从2008年至2018年安全、网络、软工、数据挖掘四个领域内与VirusTotal有关的论文工作，相应的对这些论文使用VirusTotal的方法进行了归类汇总。作者团队发现大部分论文内都使用了一次查询结果作为软件是否是恶意软件的最终评判，<em>而忽略了标签动态变化的问题</em>，此外，各个论文内对于来自VirusTotal超过70家不同安全厂商引擎返回的结果进行最终结果的判定策略也不尽相同，具体策略的选取往往也是依据人工经验来指定，无法提供对策略选定依据的有效证明，同时先前的论文内还存在诸多经验性的假定前提，如VirusTotal上各安全厂商的引擎扫描文件结果应该是相互独立的等等，都没有很好的进行验证。</p><p>为了评估以上问题，更好地指导和帮助后续使用VirusTotal的学术研究工作，作者团队相应做了此篇评估性的工作。总体而言，作者团队利用VirusTotal的distribute与rescan这两个API来获取评估所需的数据集。在持续396天的收集后，作者相应分析数据，总结了共11个由观察分析所搜集数据而得出的结论，对后续可能会使用到VirusTotal的学术研究工作起到了很好的辅助指导作用。</p><h2 id="_2-前提研究与实验设置" tabindex="-1"><a class="header-anchor" href="#_2-前提研究与实验设置" aria-hidden="true">#</a> <strong>2 前提研究与实验设置</strong></h2><p>如前述所言，作者团队首先调研了2008年至2018年这十年间隔内四大领域内115篇会使用VirusTotal来标记其数据集或是使用VirusTotal的查询/扫描API作为其系统实现的一部分的论文，其中22篇未明确说明具体对70+厂商所打标签进行聚合的处理方式，剩余93篇论文，其结果如下图所示。</p><figure><img src="'+l+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>其中t代表阈值的选取，Reputable Subset代表对应paper采用了其自身比较相信或者说觉得可靠的引擎集合的结果进行聚合，Dynamic Label Analysis则代表对标签动态变化进行了分析的论文，从图中可以看出，大部分paper使用的是<em>基于阈值判断的方式</em>，即70+厂商返回的结果，如果其中超过t个标记为恶意，则最终给这一软件打定的标签就为恶意软件。</p><p>同时作者指出，这115篇论文中，104篇以初次扫描的结果就作为最终结果，而没有考虑到标签动态变化的问题。</p><p>为了评估标签动态变化及其相关问题的具体情况，作者相应进行了实验分析。作者通过distribute这一API来获取到那些是第一次提交至VirusTotal的文件，从而确保这些文件是先前未被上传至VirusTotal的，以此来规避先前上传过对后续上传扫描结果的影响。基于此，作者从中提取了7197个恶意软件以及7226个良性软件作为主数据集，即Main Dataset，主数据集内文件皆为32位，其中5798个文件是Win32 DLL文件，剩余的为Win32 EXE文件。相应的，作者还设置了四个Ground-Truth的数据集，用来评估不同厂商在线安全引擎的准确度，其中Malware-I与Malware-II类型，由作者对四个知名勒索软件进行混淆得来，各包含60个，Benign-I为使用同样的混淆工具对作者自己用C语言写的排序软件和Windows上的一个文件编辑器得来，Benign-II为直接通过编译构建GNU Core Utilities (coreutils)以及Mono Project项目的源码得来。数据集整体情况如下图所示。</p><p>随后作者通过VirusTotal提供的rescan API对数据集进行了长达396天的收集，每一个文件每一天都会通过此API提交至VirusTotal，并记录相应各厂商的扫描结果。相应每条记录包含四个维度，分别是文件ID，时间戳，安全引擎名称，标签（即扫描结果）。最后作者团队一共收集到343,585,060条数据，其中主数据集占据了341,668,521条。</p><figure><img src="'+g+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h2 id="_3-实验结果分析" tabindex="-1"><a class="header-anchor" href="#_3-实验结果分析" aria-hidden="true">#</a> <strong>3 实验结果分析</strong></h2><p>首先定义一下“hazard 翻转”即为“010”或“101”这样连续翻转的类型，其中0为良性软件，1为恶意软件。作者发现收集到的数据中，有1,760,484个hazard 翻转和811,325个非hazard 翻转。其中持续时间最长的hazard 翻转达到了19天。由此作者得出第一个观察结论。</p><p>观察1：VirusTotal上超过一半的标签动态翻转为hazard翻转，同时hazard翻转可以通过连续三天上传同一文件，观测其被标记的结果来判断。</p><p>随后作者相应对不同厂商、文件、日期这三个维度下扫描结果进行了分析，发现标签翻转现象是广泛存在的，同时那些hazard翻转较多的文件，也会更可能有更多的非hazard的普通翻转。平均而言，每一周有45,119此翻转，且观测期的第一周存在数目最多的翻转。作者相应也列出了翻转最多的三家安全引擎厂商，即在所有扫描结果中，Aegislab 包含了 359,221 (13.96%) 次翻转, F-Secure 排名第二，即297,973次翻转, VIPRE 排名第三，有233,875次翻转。由此，作者得出第二个观察结论。</p><p>观察2：hazard翻转和非hazard的普通翻转，在不同厂商、不同文件、不同时间三个维度上都是广泛存在的。</p><p>接着作者通过调研扫描结果报告里对应厂商安全引擎的更新版本与日期，推测并总结了两方面可能导致翻转的原因，分别是（1）VirusTotal为了提高服务性能，会在多个docker中部署同一厂商安全引擎的实例，但是这些引擎的模型在不同docker内会有更新不同步的现象，从而导致对于同一文件扫描结果的翻转现象。（2）各厂商引擎自身模型或算法本身带来的不确定性。由此，作者得出第三个观察结论。</p><p>观察3：引擎模型更新是存在标签翻转现象的主要原因，同时引擎模型更新时不一致以及引擎模型本身的不确定性也会导致标签翻转。</p><p>随后，作者相应观察了标签大概在什么时候能稳定下来（即不会再发生反转），作者相应考虑了包含hazard翻转和不包含的情况，其结果如下图所示：</p><figure><img src="'+c+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>作者相应进行了总结，当考虑VirusTotal上所有引擎时，大约过了350天，标签会稳定下来，同时当去除掉依据翻转最多进行排名的前五家安全厂商引擎，标签稳定的初始百分比就已经很高了。由此，作者得出第四个观察结论。</p><p>观察4：对于单个厂商引擎而言，等待较长一段时间并不一定能确保标签会稳定，除非是只考虑一少部分引擎集合。</p><p>紧接着，作者又对不同的聚合方式进行了实验，发现基于阈值的方式效果出奇的好，其结果如下图所示：</p><figure><img src="'+d+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>不难发现，当阈值t取2-39时，中间标签翻转的占比是相对较少的，因此，这个范围也是比较合适的，由此，作者得出了第五个观察结论。</p><p>观察5：当阈值t的选取过大或者过小时，翻转会很影响不同厂商标签聚合后的结果，当选取阈值在一个合理范围时（此处为2-39）时，标签比较容易稳定。</p><p>同时，考虑到先前工作中都认定引擎对文件打标签时彼此是独立的，作者相应进行了实验，实验采取不同厂商安全引擎对某一文件的扫描结果序列（因为是396天，一天扫一次，所以是一个长度为396的，只包含01的序列）进行余弦相似度分析来进行相似性判断，结果如下图所示：</p><figure><img src="'+u+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>由此，作者得出第六个观察结论。</p><p>观察6：有一些不同引擎群彼此间在做标签决策时是有强关联性的，这些引擎的扫描结果不应该被认定为是彼此独立的。</p><p>随后，为了进一步验证这一点，作者提出了主动影响和被动影响这两个维度，主动影响表示厂商j翻转了它对某一文件的标签，是因为非常近的时间窗口之前另一个厂商i也对此文件做了同样的翻转。被动影响表示先前厂商i对某一文件的扫描结果保持了一段时间，随后厂商j对此文件也翻转成了同厂商i一致的结果。相应的，作者计算主动影响与被动影响的得分，公式如下：</p><figure><img src="'+f+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>在主动影响前提下，<img src="'+_+'" alt="图片" style="zoom:25%;">代表对于所有文件上，厂商i给j带来的主动影响事件数。Ai表示厂商i引擎翻转的总数目。在被动影响前提下，<img src="https://mmbiz.qpic.cn/mmbiz_png/RyyHWbbqW856Z7zDyQickthSPDBzWibrgCZNraUFGY2QGj4UrnM6ib6pgic0aw7xKn21xoQJVBLic2IH9Oa61yknbSg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" style="zoom:25%;">代表对于所有文件上，厂商i给j带来的被动影响事件数。Ai表示7个连续标签为1或0的子序列数目。这里选定7天为时间窗口，作者说明相应也采取了14天，28天，发现结果是类似的，因而最终选用7天为标准。</p><p>相应主动影响的结果如下图所示：</p><figure><img src="'+h+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>可以看出有垂直的亮线，这表明了有一些安全厂商的引擎会很容易受到其他厂商引擎的影响。没有水平的亮线表明没有哪一家安全厂商的引擎可以很强的影响所有其他厂商的引擎。由此，作者得出第七个观察结论。</p><p>观察7：VirusTotal上不同引擎间的主动影响是广泛存在的。同时也存在一些厂商的引擎在“0-1”翻转和“1-0”翻转两个方向上都很容易受到别的引擎的影响。</p><p>​ 相应被动影响的结果如下图所示：</p><figure><img src="'+m+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>分析方式同理，由此作者得出第八个观察。</p><p>观察8：一般角度上讲，被动影响要弱一些，但是“0-1”这一方向上，被动影响要相对强一点。</p><p>接下来，作者为了验证不同厂商安全引擎的准确度，利用预先准备好的Ground-Truth数据集（即Malware-I与II，Benign-I与II）进行了实验，结果如下图所示：</p><figure><img src="'+b+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><figure><img src="'+x+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>从图上不难看出，良性软件上的混淆会对引擎的准确度带来很大的影响（橘色线代表未混淆的Benign-II数据集，且一直高于蓝线），同时那些知名度高或者先前被认为是很有效的引擎，如F-Secure，不一定就会表现的好（F-Secure显然没有Kaspersky、Jiangmin等准确度好），由此作者得出第九个观察。</p><p>观察9：良性软件上的混淆很容易给VirusTotal上的引擎带来假阳性,同时那些知名度高的引擎在应对混淆上不见得就一定好。</p><p>随后，作者又分析了一下阈值选取如何能够很好的权衡准确度和召回率，实验结果如下图所示：</p><figure><img src="'+z+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><figure><img src="'+y+'" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>由此，作者得出了第十个观察。</p><p>观察10：只要良性软件没有被混淆的话，一个较小的阈值是可以比较好的平衡准确率与召回率的。</p><p>最后作者发现这些厂商的在线安全引擎有36家还有对应的桌面版，于是作者相应在Groun-Truth数据集上进行了对比试验，发现所有36个引擎在Malware数据集上都有不一致的地方，Malware-I上平均不一致比例为25.4%，Malware-II上平均不一致比例为29.2%。Benign数据集上不一致比例相对低一些，Benign-I部分不一致比例为23.4%，Benign-II数据集上则为0。同时对于准确度而言，作者发现36家引擎内的26家桌面版引擎时高于在线版引擎的，对于召回率而言，36家中的25家在线引擎版本要高于桌面版。由此，作者得出第十一个观察结论。对于综合了准确率和召回率的F1-Score而言，36家中的24家在线版本要强于其对应的桌面版。</p><p>观察11：VirusTotal上有桌面版引擎的所有厂商引擎都和其桌面版之前存在检测不一致性，且令人惊讶的是大部分厂商的安全引擎在线版本相比于它们的桌面版本能检测出更多的恶意软件。</p><h2 id="_4-评价" tabindex="-1"><a class="header-anchor" href="#_4-评价" aria-hidden="true">#</a> <strong>4 评价</strong></h2><p>首先本文的工作量是比较大的，同时相应十一个观察结论对于后续需要使用VirusTotal的研究工作来说是很有价值的。但其实也会有一些限制，譬如，Malware数据集的设定是在四个知名的勒索软件上进行混淆得到的，但不排除有些厂商的引擎可能在检测其他类型或家族的恶意软件上更有优势，因而细节上得到的实验结果可能会有所不同，作者其实在论文的最后也有补充利用安卓apk文件进行相同实验方式的补充，也体现了这一点，不过整体的观察结论还是能保持一致的。</p><p>总的来说，本篇文章很好的调研了现有学术研究中<em>使用VirusTotal不当的地方</em>，并通过实验系统且多角度的评估了VirusTotal上各安全厂商引擎存在标签动态变换的问题，并结合自己的实验数据，给出了一些相关的建议，对于后续需要使用到或者基于VirusTotal的学术研究工作有着非常积极的指导意义。</p>',58);function B(S,L){const e=r("ExternalLinkIcon");return s(),o("div",null,[I,T,a("p",null,[i("论文链接："),a("a",w,[i("https://www.usenix.org/system/files/sec20fall_zhu_prepub.pdf"),t(e)])]),a("p",null,[i("开源数据集地址："),a("a",M,[i("https://sfzhu93.github.io/projects/vt/index.html"),t(e)])]),k])}const j=n(V,[["render",B],["__file","43-白泽带你读论文丨Measuring and Modeling the Label Dynamics of Online.html.vue"]]);export{j as default};
