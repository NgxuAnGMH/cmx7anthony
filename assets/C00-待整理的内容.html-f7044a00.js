import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as l,c as e,d as t}from"./app-cdabc73c.js";const p={},o=t('<h1 id="系统单位相关" tabindex="-1"><a class="header-anchor" href="#系统单位相关" aria-hidden="true">#</a> 系统单位相关</h1><p>主要内容的逻辑划分貌似是：</p><ol><li><p>CPU工作模式：</p><ul><li>实模式（BIOS）</li><li>保护模式（32bitOS）</li><li>长模式（64bitOS）</li></ul></li><li><p>寄存器的作用和设计</p></li><li><p>访问内存数据的方式和流程</p></li><li><p>中断机制</p><ul><li>硬中断：通过硬件的方式实现的中断。</li><li>软中断：通过软件的方式实现的中断。</li><li>关中断：让 CPU 停止响应中断信号。</li></ul></li></ol><p>32bit的OS 1 word = 4 Byte</p><p>64bit的OS 1 word = 8 Byte</p><p>寄存器一般都是1word的存储空间！</p><p>也可以理解为是字长决定了虚拟地址的最大空间。</p><p>内存的每个字节！都有相应的地址。逻辑上来说是一个数组（字节数组ByteArray）</p><p>即内存是以Byte的大小作为划分的！每一个字节由惟一的数字表示，我们称之为地址。</p><p>通常总线被设定为传送1个word单位大小的字节块。</p>',10),r=[o];function _(a,c){return l(),e("div",null,r)}const s=i(p,[["render",_],["__file","C00-待整理的内容.html.vue"]]);export{s as default};
